<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>fileTypes</key>
    <array>
      <string>nacho</string>
    </array>
    <key>foldingStartMarker</key>
    <string>(\(\s*$|\{\s*$)</string>
    <key>foldingStopMarker</key>
    <string>(^\s*\)|^\s*\})</string>
    <key>keyEquivalent</key>
    <string>^~nacho</string>
    <key>name</key>
    <string>nacho</string>
    <key>patterns</key>
    <array>
      <dict>
        <key>begin</key>
        <string>&lt;!--</string>
        <key>captures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.comment.html</string>
          </dict>
        </dict>
        <key>end</key>
        <string>--\s*&gt;</string>
        <key>name</key>
        <string>comment.block.html</string>
      </dict>
      <dict>
        <key>match</key>
        <string>^ *#{2} .*$\n?</string>
        <key>name</key>
        <string>entity.name.function.nacho</string>
      </dict>
      <dict>
        <key>match</key>
        <string>^ *#{3} .*$\n?</string>
        <key>name</key>
        <string>string.quoted.nacho</string>
      </dict>
      <dict>
        <key>match</key>
        <string>^ *#{4} .*$\n?</string>
        <key>name</key>
        <string>storage.class.nacho</string>
      </dict>
      <dict>
        <key>match</key>
        <string>^ *#{5,} .*$\n?</string>
        <key>name</key>
        <string>entity.name.tag</string>
      </dict>
      <!-- if you want to style h6, be sure to remove the , in h5 -->
      <dict>
        <key>match</key>
        <string>^> (.*)$</string>
        <key>name</key>
        <string>storage.class.nacho</string>
      </dict>
      <!-- I'm sure there is a better way of allowing ** inside headings -->
      <dict>
        <key>begin</key>
        <string>(#|//) .*</string>
        <key>name</key>
        <string>comment.line.number-sign.nacho</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.comment.nacho</string>
          </dict>
          <key>0</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>name</key>
                <string>punctuation.nacho</string>
                <key>match</key>
                <string>\*(?! )([^*]+)\*|\:(?! )([^:]+)\:|\`(?! )([^`]+)\`</string>
                <!-- only highlight the stuff inside -->
                <key>captures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>constant.nacho</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>constant.nacho</string>
                  </dict>
                  <key>3</key>
                  <dict>
                    <key>name</key>
                    <string>constant.nacho</string>
                  </dict>
                </dict>
              </dict>
            </array>
          </dict>
        </dict>
        <key>end</key>
        <string>$\n?</string>
      </dict>
      <!-- this is duplicated, but I don't know how to use include -->
      <dict>
        <key>name</key>
        <string>punctuation.nacho</string>
        <key>match</key>
        <string>\*(?! )([^*]+)\*|\@(?! )([^@]+)\@</string>
        <!-- only highlight the stuff inside -->
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>variable.nacho</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>variable.nacho</string>
          </dict>
        </dict>
      </dict>
      <!-- <dict><key>captures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.comment.nacho</string></dict></dict><key>match</key><string>(//) .*$\n?</string><key>name</key><string>comment.line.number-sign.nacho</string></dict> -->
      <!-- <dict><key>match</key><string> +@.*$</string><key>name</key><string>keyword.nacho</string></dict> -->
      <!-- <dict><key>match</key><string>\b(logical|numeric|character|complex|matrix|array|data\.frame|list|factor)(?=\s*\()</string><key>name</key><string>storage.type.nacho</string></dict> -->
      <!-- <dict><key>match</key><string>\b(function|if|break|next|repeat|else|for|return|switch|while|in|invisible)\b</string><key>name</key><string>keyword.control.nacho</string></dict> -->
      <dict>
        <key>match</key>
        <string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\b</string>
        <key>name</key>
        <string>constant.numeric.nacho</string>
      </dict>
      <dict>
        <key>match</key>
        <string>\b(TRUE|FALSE|NULL|NA|Inf|NaN)\b</string>
        <key>name</key>
        <string>constant.language.nacho</string>
      </dict>
      <!-- <dict><key>match</key><string>\b(pi|letters|LETTERS|month\.abb|month\.name)\b</string><key>name</key><string>support.constant.misc.nacho</string></dict> -->
      <dict>
        <key>match</key>
        <string>(\-|\+|\*|\/|%\/%|%%|%\*%|%in%|%o%|%x%|\^)</string>
        <key>name</key>
        <string>keyword.operator.arithmetic.nacho</string>
      </dict>
      <dict>
        <key>match</key>
        <string>(=|&lt;-|&lt;&lt;-|-&gt;|-&gt;&gt;)</string>
        <key>name</key>
        <string>keyword.operator.assignment.nacho</string>
      </dict>
      <dict>
        <key>match</key>
        <string>(==|!=|&lt;&gt;|&lt;|&gt;|&lt;=|&gt;=)</string>
        <key>name</key>
        <string>keyword.operator.comparison.nacho</string>
      </dict>
      <dict>
        <key>match</key>
        <string>(!|&amp;{1,2}|[|]{1,2})</string>
        <key>name</key>
        <string>keyword.operator.logical.nacho</string>
      </dict>
      <dict>
        <key>match</key>
        <string>(\.\.\.|\$|:|\~)</string>
        <key>name</key>
        <string>keyword.other.nacho</string>
      </dict>
      <dict>
        <key>begin</key>
        <string>"</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.begin.nacho</string>
          </dict>
        </dict>
        <key>end</key>
        <string>"</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.end.nacho</string>
          </dict>
        </dict>
        <key>name</key>
        <string>string.quoted.double.nacho</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>\\.</string>
            <key>name</key>
            <string>constant.character.escape.nacho</string>
          </dict>
        </array>
      </dict>
      <dict>
        <key>begin</key>
        <string>«</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.begin.nacho</string>
          </dict>
        </dict>
        <key>end</key>
        <string>»</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.end.nacho</string>
          </dict>
        </dict>
        <key>name</key>
        <string>string.quoted.double.nacho</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>\\.</string>
            <key>name</key>
            <string>constant.character.escape.nacho</string>
          </dict>
        </array>
      </dict>
      <!-- remove single quote -->
      <!-- <dict><key>begin</key><string>'</string><key>beginCaptures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.string.begin.nacho</string></dict></dict><key>end</key><string>'</string><key>endCaptures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.string.end.nacho</string></dict></dict><key>name</key><string>string.quoted.single.nacho</string><key>patterns</key><array><dict><key>match</key><string>\\.</string><key>name</key><string>constant.character.escape.nacho</string></dict></array></dict> -->
      <dict>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.nacho</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.assignment.nacho</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>keyword.control.nacho</string>
          </dict>
        </dict>
        <key>match</key>
        <string>([a-zA-Z._][a-zA-Z0-9._]*)\s*(&lt;-)\s*(function)</string>
        <key>name</key>
        <string>meta.function.nacho</string>
      </dict>
      <dict>
        <key>match</key>
        <string>([a-zA-Z._][a-zA-Z0-9._]*)\s*\(</string>
      </dict>
      <dict>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>variable.parameter.nacho</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.assignment.nacho</string>
          </dict>
        </dict>
        <key>match</key>
        <string>([a-zA-Z._][a-zA-Z0-9._]*)\s*(=)(?=[^=])</string>
      </dict>
      <dict>
        <key>match</key>
        <string>\b([a-zA-Z._][a-zA-Z0-9._]*)\b</string>
        <key>name</key>
        <!-- you can change this to variable -->
        <string>text.nacho</string>
      </dict>
    </array>
    <key>scopeName</key>
    <string>source.nacho</string>
    <key>uuid</key>
    <string>B2E6B78D-6E70-11D9-A369-000D93B3A10E</string>
  </dict>
</plist>